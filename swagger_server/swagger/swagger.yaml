---
swagger: "2.0"
info:
  description: "API for the parser microservice"
  version: "1.1.0"
  title: "Swagger Parser Microservice"
host: "milki-psy.dbis.rwth-aachen.de"
basePath: "/api"
schemes:
  - "http"
  - "https"
paths:
  /user:
    post:
      description: "Returns user information (name, email) given their ID."
      operationId: "get_user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "json_input"
          description: "User ID"
          required: true
          schema:
            $ref: "#/definitions/SBF"
      responses:
        "200":
          description: "OK. User Information."
          schema:
            $ref: "#/definitions/SBFRes"
        "500":
          description: "Internal Server error."
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /help:
    post:
      description: "Returns help text about the bot's abilities."
      operationId: "help_text"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "json_input"
          description: ""
          required: true
          schema:
            $ref: "#/definitions/SBF"
      responses:
        "200":
          description: "OK. User Help text."
          schema:
            $ref: "#/definitions/SBFRes"
        "500":
          description: "Internal Server error."
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /greeting:
    post:
      description: "Returns help text about the bot's abilities."
      operationId: "greeting"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "json_input"
          description: ""
          required: true
          schema:
            $ref: "#/definitions/SBF"
      responses:
        "200":
          description: "OK. Greeting buttons."
          schema:
            $ref: "#/definitions/SBFResBlock"
        "500":
          description: "Internal Server error."
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /station/information:
    post:
      description: "Returns the queried information about a station given its ID."
      operationId: "station_information"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "json_input"
          description: "Station ID and information to query"
          required: true
          schema:
            $ref: "#/definitions/SBF"
      responses:
        "200":
          description: "OK. Station Information."
          schema:
            $ref: "#/definitions/SBFRes"
        "500":
          description: "Internal Server error."
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /station/execution:
    post:
      description: "Returns the queried execution information about a station given its ID."
      operationId: "station_execution"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "json_input"
          description: "Station ID and information to query"
          required: true
          schema:
            $ref: "#/definitions/SBF"
      responses:
        "200":
          description: "OK. Station Information."
          schema:
            $ref: "#/definitions/SBFRes"
        "500":
          description: "Internal Server error."
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /train/information:
    post:
      description: "Returns the queried business information about a train given its ID."
      operationId: "train_information"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "json_input"
          description: "Train ID and information to query"
          required: true
          schema:
            $ref: "#/definitions/SBF"
      responses:
        "200":
          description: "OK. Train Information."
          schema:
            $ref: "#/definitions/SBFRes"
        "500":
          description: "Internal Server error."
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /train/runtime:
    post:
      description: "Returns the queried runtime information about a train given its ID."
      operationId: "train_runtime"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "json_input"
          description: "Train ID and information to query"
          required: true
          schema:
            $ref: "#/definitions/SBF"
      responses:
        "200":
          description: "OK. Train Information."
          schema:
            $ref: "#/definitions/SBFRes"
        "500":
          description: "Internal Server error."
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /train/request:
    post:
      description: "Requests a train of a given class to start a given route."
      operationId: "train_request"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "json_input"
          description: "Train class and route"
          required: true
          schema:
            $ref: "#/definitions/SBF"
      responses:
        "200":
          description: "OK. Request information."
          schema:
            $ref: "#/definitions/SBFRes"
        "500":
          description: "Internal Server error."
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /all:
    post:
      description: "Returns all trains or stations."
      operationId: "get_all"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "json_input"
          description: "Requested part (trains or stations)"
          required: true
          schema:
            $ref: "#/definitions/SBF"
      responses:
        "200":
          description: "OK. Information."
          schema:
            $ref: "#/definitions/SBFRes"
        "500":
          description: "Internal Server error."
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /performance:
    post:
      description: "Returns performance information of the part queried."
      operationId: "get_performance"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "json_input"
          description: "Station or train ID. Performance request."
          required: true
          schema:
            $ref: "#/definitions/SBF"
      responses:
        "200":
          description: "OK. Performance Plot."
          schema:
            $ref: "#/definitions/SBFRes"
        "500":
          description: "Internal Server error."
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /buttonIntent:
    post:
      description: "Responds when a button is pressed."
      operationId: "button"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "json_input"
          required: true
          schema:
            $ref: "#/definitions/ACTION"
      responses:
        "200":
          description: "OK."
          schema:
            $ref: "#/definitions/SBFResBlock"
        "500":
          description: "Internal Server error."
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /performance/{image_name}:
    get:
      description: "Returns a png file of the performance data of a station."
      operationId: "get_image"
      produces:
        - "application/png"
      parameters:
        - in: "path"
          name: "image_name"
          required: true
          type: "string"
      responses:
        "200": # Response
          description: OK
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
definitions:
  SBF:
    type: "object"
    required:
      - "entities"
      - "intent"
    properties:
      mgs:
        type: "string"
      botName:
        type: "string"
      channel:
        type: "string"
      intent:
        type: "string"
      entities:
        type: "object"
        properties: {}
      email:
        type: "string"
      user:
        type: "string"
      time:
        type: "string"
    example:
      entities: "entities"
      botName: "abcdefghij"
      mgs: "This is an example message."
      channel: "A12B34CD56E"
      time: "1652555219.9155562"
      intent: "station_info"
      user: "X09Y87ZU65V"
      email: "X09Y87ZU65V"
  ACTION:
    type: "object"
    required:
      - "entities"
      - "intent"
      - "channel"
      - "actionInfo"
    properties:
      mgs:
        type: "string"
      botName:
        type: "string"
      channel:
        type: "string"
      intent:
        type: "string"
      entities:
        type: "object"
        properties: {}
      email:
        type: "string"
      user:
        type: "string"
      time:
        type: "string"
      contextOn:
        type: "boolean"
      actionInfo:
        type: "object"
        properties: {}
      message_id:
        type: "object"
        properties: {}
    example:
      entities: "entities"
      botName: "abcdefghij"
      mgs: "This is an example message."
      channel: "A12B34CD56E"
      time: "1652555219.9155562"
      intent: "station_info"
      user: "X09Y87ZU65V"
      email: "X09Y87ZU65V"
  SBFRes:
    type: "object"
    properties:
      text:
        type: "string"
      closeContext:
        type: "string"
    example:
      text: "text"
      closeContext: "closeContext"
  SBFResBlock:
    type: "object"
    properties:
      blocks:
        type: "object"
      closeContext:
        type: "string"
    example:
      text: "text"
      closeContext: "closeContext"
